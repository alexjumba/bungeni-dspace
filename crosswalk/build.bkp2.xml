<?xml version="1.0"?>

<project name="crosswalk" basedir="." default="finish"><!-- usage -->

	<property name="name" value="crosswalk"/>

	<property name="war.dir" value="war"/>
	<property name="src.dir" value="src"/>
	<property name="build.dir" value=".classes"/>
	<property name="docs.dir" value="${war.dir}/docs"/>
	<property name="webclasses.dir" value="${war.dir}/WEB-INF/classes"/>
	<property name="weblib.dir" value="${war.dir}/WEB-INF/lib"/>
	<property name="dist.dir" value="dist"/>
	<property name="db.dir" value="db"/>

	<property name="testsrc.dir" value="test"/>
	<property name="testbuild.dir" value=".testclasses"/>
	<property name="testreports.dir" value="junit-reports"/>
	<property name="testhtml.dir" value="${testreports.dir}/html"/>

	<property name="spring.root" value="."/>
	<property name="domain.classes" value="org/springframework/samples/petclinic/*.class"/>
	<property name="tomcat.context" value="tomcat/META-INF"/>

	<property file="build.properties"/>
	<property environment="env"/>


	<path id="master-classpath">
		<fileset dir="${spring.root}/lib/aspectj">
			<include name="aspectjweaver.jar"/>
		</fileset>
		<fileset dir="${spring.root}/lib/hibernate">
			<include name="hibernate3.jar"/>
		</fileset>
		<fileset dir="${spring.root}/lib/struts">
			<include name="*.jar"/>
			<include name="*.tld"/>
		</fileset>
		<fileset dir="${spring.root}/lib/j2ee">
			<include name="persistence.jar"/>
			<include name="servlet-api.jar"/>
		</fileset>
		<fileset dir="${spring.root}/lib/jakarta-commons">
			<include name="commons-logging.jar"/>
		</fileset>
		<fileset dir="${spring.root}/lib/toplink">
			<include name="toplink-essentials.jar"/>
		</fileset>
		<fileset dir="${spring.root}/distrib">
			<include name="spring.jar"/>
		</fileset>
		<fileset dir="${spring.root}/distrib/modules">
			<include name="spring-webmvc.jar"/>
		</fileset>
	</path>

	<path id="build-classpath">
		<!-- Only link toplink-api.jar in for building -->
		<fileset dir="${spring.root}/lib/toplink">
			<include name="toplink-api.jar"/>
		</fileset>
	</path>


	<target name="usage">
		<echo message=""/>
		<echo message="Crosswalk build file"/>
		<echo message="------------------------------------------------------"/>
		<echo message=""/>
		<echo message="Available targets are:"/>
		<echo message=""/>
		<echo message="clean    --> Clean output dirs"/>
		<echo message="build    --> Compile main Java sources and copy libraries"/>
		<echo message="warfile  --> Build the web application archive"/>
		<echo message="all      --> Clean, build, warfile"/>
		<echo message=""/>
	</target>

	<target name="finish" depends="clean,warfile" description="Clean and warfile">
	</target>

	<target name="clean" description="Clean output dirs (build, docs, testbuild, testreports, weblib, dist)">
		<delete dir="${build.dir}"/>
		<delete dir="${docs.dir}"/>
		<delete dir="${env.TOMCAT_HOME}/webapps/crosswalk"/>
		<delete>
			<fileset dir="${webclasses.dir}">
				<include name="*.hbm.xml"/>
				<include name="*.xml"/>
				<include name="jdbc.properties"/>
			</fileset>
		</delete>
		<delete dir="${weblib.dir}"/>
		<delete dir="${testbuild.dir}"/>
		<delete dir="${testreports.dir}"/>
		<delete dir="${dist.dir}"/>
	</target>


	<target name="build" description="Compile main source tree java files into class files, generate jar files">

		<mkdir dir="${build.dir}"/>
		<mkdir dir="${weblib.dir}"/>

		<javac destdir="${build.dir}" source="1.5" target="1.5"
				debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}"/>
			<classpath refid="master-classpath"/>
			<classpath refid="build-classpath"/>
		</javac>

		<copy todir="${webclasses.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="*.hbm.xml"/>
				<include name="*.xml"/>
				<include name="jdbc.properties"/>
			</fileset>
		</copy>

		<!-- crosswalk-domain.jar -->
		<jar jarfile="${weblib.dir}/${name}-domain.jar" compress="true">
			<fileset dir="${src.dir}">
				<include name="META-INF/orm.xml"/>
				<include name="META-INF/persistence.xml"/>
			</fileset>
			<fileset dir="${build.dir}">
				<include name="${domain.classes}"/>
			</fileset>
		</jar>

		<!-- rest of Crosswalk classes -->
		<jar jarfile="${weblib.dir}/${name}.jar" compress="true">
			<fileset dir="${src.dir}">
				<include name="META-INF/aop.xml"/>
			</fileset>
			<fileset dir="${build.dir}">
				<include name="**/*"/>
				<exclude name="${domain.classes}"/>
			</fileset>
		</jar>

		<!-- copy Tomcat META-INF -->
		<copy todir="${weblib.dir}" preservelastmodified="true">
			<fileset dir="${spring.root}/lib/aspectj">
				<include name="aspectjrt.jar"/>
				<include name="aspectjweaver.jar"/>
			</fileset>
			<fileset dir="${spring.root}/lib/cglib">
				<include name="cglib*.jar"/>
			</fileset>
			<fileset dir="${spring.root}/lib/dom4j">
				<include name="dom4j*.jar"/>
			</fileset>
			<fileset dir="${spring.root}/lib/jakarta-commons">
				<include name="commons-collections.jar"/>
				<include name="commons-dbcp.jar"/>
				<include name="commons-lang.jar"/>
				<include name="commons-logging.jar"/>
				<include name="commons-pool.jar"/>
			</fileset>
			<fileset dir="${spring.root}/lib/javassist">
				<include name="javassist*.jar"/>
			</fileset>
			<fileset dir="${spring.root}/lib/log4j">
				<include name="log4j*.jar"/>
			</fileset>
			<fileset dir="${spring.root}/lib/slf4j">
				<!-- SLF4J only needed for Hibernate -->
				<include name="slf4j*.jar"/>
			</fileset>
			<fileset dir="${spring.root}/distrib">
				<include name="spring.jar"/>
			</fileset>
			<fileset dir="${spring.root}/distrib/modules">
				<include name="spring-webmvc.jar"/>
			</fileset>
			<fileset dir="${spring.root}/distrib/weaving">
				<include name="spring-aspects.jar"/>
				<include name="spring-tomcat-weaver.jar"/>
			</fileset>
			<fileset dir="${spring.root}/lib/struts">
				<include name="*.jar"/>
				<include name="*.tld"/>
			</fileset>
		</copy>

	</target>
	
	<target name="dist" depends="warfile">
		<!--
			Delegate to warfile target by depending on it. dist is just to offer
			a generic target name that may be used
			for autobuilds testing.
		-->
	</target>


	<target name="warfile" depends="build" description="Build the web application archive">

		<mkdir dir="${dist.dir}"/>
		<copy file="${war.dir}/WEB-INF/web.xml.template.xml"
               tofile="${war.dir}/WEB-INF/web.xml"
               overwrite="true">
               <filterchain>
                       <replacetokens>
                            <token key="DSPACE_HOME" value="${env.DSPACE_HOME}"/>
                       </replacetokens>
               </filterchain>
        </copy>
		<war warfile="${dist.dir}/${name}.war" basedir="${war.dir}" webxml="${war.dir}/WEB-INF/web.xml">
			<include name="*"/>
			<include name="images/**"/>
			<include name="kit/**"/>
			<include name="pages/**"/>
			<include name="WEB-INF/*.*"/>
			<exclude name="WEB-INF/web.xml"/>
			<include name="WEB-INF/classes/*.*"/>
			<include name="WEB-INF/lib/**"/>
			<include name="WEB-INF/jsp/**"/>
			<include name="WEB-INF/classes/META-INF/*"/>
			<include name="META-INF/*"/>
			<exclude name="**/.*"/>
			<exclude name="WEB-INF/geronimo-web.xml"/>
		</war>		
		
		<unwar src="${dist.dir}/${name}.war" dest="${env.TOMCAT_HOME}/webapps/crosswalk"/>

	</target>


	<target name="all" depends="clean,build,warfile" description="Clean,build,warfile"/>

</project>
