<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd">

	<display-name>crosswalk</display-name>

	<description>crosswalk</description>


<!-- Configuration Information -->

  <context-param>
    <param-name>dspace-config</param-name>
    <param-value>/home/alex/dspace/config/dspace.cfg</param-value>
    <description>
      The location of the main DSpace configuration file
    </description>
  </context-param>

  <context-param>
    <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
    <param-value>Messages</param-value>
  </context-param>
  
  <!-- Listener to clean up Commons-FileUpload -->
  <!-- <listener>
     <listener-class>
        org.apache.commons.fileupload.servlet.FileCleanerCleanup
     </listener-class>
  </listener> -->
  
  <!-- Listener to initialise / clean up the application -->
  <listener>
     <listener-class>
        org.dspace.app.util.DSpaceContextListener
     </listener-class>
  </listener>
	<!--
		- Loads the root application context of this web app at startup,
		- by default from "/WEB-INF/applicationContext.xml".
		- Note that you need to fall back to Spring's ContextLoaderServlet for
		- J2EE servers that do not follow the Servlet 2.4 initialization order.
		-
		- Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
		- to access it anywhere in the web application, outside of the framework.
		-
		- The root context is the parent of all servlet-specific contexts.
		- This means that its beans are automatically available in these child contexts,
		- both for getBean(name) calls and (external) bean references.
	-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping> -->


	<!--  <filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>
    </filter> -->
    
     <!-- <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> -->
    
	<!--
		Key of the system property that should specify the root directory of this
		web app. Applied by WebAppRootListener or Log4jConfigListener.
	-->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>crosswalk.root</param-value>
	</context-param>

	<!--
		Location of the Log4J config file, for initialization and refresh checks.
		Applied by Log4jConfigListener.
	-->
	<!-- <context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j.properties</param-value>
	</context-param> -->

	<!--
		- Location of the XML file that defines the root application context.
		- Applied by ContextLoaderServlet.
		-
		- Can be set to:
		- "/WEB-INF/applicationContext-hibernate.xml" for the Hibernate implementation,
		- "/WEB-INF/applicationContext-jpa.xml" for the JPA one, or
		- "/WEB-INF/applicationContext-jdbc.xml" for the JDBC one.
	-->
	<!-- <context-param>
		<param-name>contextConfigLocation</param-name> -->

		<!-- <param-value>
					/WEB-INF/applicationContext-hibernate.xml
					/WEB-INF/applicationContext-security.xml
		</param-value> -->
		<!--		
		<param-value>/WEB-INF/applicationContext-jdbc.xml</param-value>
		<param-value>/WEB-INF/applicationContext-jpa.xml</param-value>
		-->
		<!--
	  - Location of the XML file that defines the root application context
	  - Applied by ContextLoaderListener.
	  -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/applicationContext-hibernate.xml
		</param-value>
	</context-param>

		<!--
			To use the JPA variant above, you will need to enable Spring load-time
			weaving in your server environment. See PetClinic's readme and/or
			Spring's JPA documentation for information on how to do this.
		-->
	<!-- </context-param> -->

	<!--
		- Configures Log4J for this web app.
		- As this context specifies a context-param "log4jConfigLocation", its file path
		- is used to load the Log4J configuration, including periodic refresh checks.
		-
		- Would fall back to default Log4J initialization (non-refreshing) if no special
		- context-params are given.
		-
		- Exports a "web app root key", i.e. a system property that specifies the root
		- directory of this web app, for usage in log file paths.
		- This web app specifies "petclinic.root" (see log4j.properties file).
	-->
	<!-- Leave the listener commented-out if using JBoss -->	
	<!-- <listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener> -->
	

	

	<listener>
    	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    
    <!--
        The HttpSessionEventPublisher will publish
        HttpSessionCreatedEvent and HttpSessionDestroyedEvent
        to the WebApplicationContext
	-->
    <!-- <listener>
        <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
    </listener> -->
    
    
	<!--
		- Servlet that dispatches request to registered handlers (Controller implementations).
		- Has its own application context, by default defined in "{servlet-name}-servlet.xml",
		- i.e. "petclinic-servlet.xml".
		-
		- A web app can contain any number of such servlets.
		- Note that this web app has a shared root application context, serving as parent
		- of all DispatcherServlet contexts.
	-->
	<servlet>
		<servlet-name>crosswalk</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet>
	  <servlet-name>bungeni-search</servlet-name>
	  <servlet-class>org.un.undesa.bungeni.crosswalk.search.ExtractRecord</servlet-class>
	</servlet>
	
	<servlet>
	  <servlet-name>bungeni-opensearch</servlet-name>
	  <servlet-class>org.un.undesa.bungeni.crosswalk.search.OpenSearch</servlet-class>
	</servlet>
	
	<servlet>
	  <servlet-name>bungeni-opensearch-statistics</servlet-name>
	  <servlet-class>org.un.undesa.bungeni.crosswalk.search.OpenSearchStatistics</servlet-class>
	</servlet>

	<servlet>
	  <servlet-name>bungeni-details</servlet-name>
	  <servlet-class>org.un.undesa.bungeni.crosswalk.search.RecordDetails</servlet-class>
	</servlet>

	<servlet>
	  <servlet-name>bungeni-community</servlet-name>
	  <servlet-class>org.un.undesa.bungeni.crosswalk.search.ListCollections</servlet-class>
	</servlet>

	<servlet>
	  <servlet-name>bungeni-allitems</servlet-name>
	  <servlet-class>org.un.undesa.bungeni.crosswalk.search.ListAllItems</servlet-class>
	</servlet>
	
	<servlet>
	  <servlet-name>bungeni-listitems</servlet-name>
	  <servlet-class>org.un.undesa.bungeni.crosswalk.search.ListItems</servlet-class>
	</servlet>
	
	<servlet>
	  <servlet-name>bungeni-alternate</servlet-name>
	  <servlet-class>org.dspace.app.itemimport.WebServiceImport</servlet-class>
	</servlet>
	
	<servlet-mapping>
	  <servlet-name>bungeni-search</servlet-name>
	  <url-pattern>/bungeni-search</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>bungeni-opensearch</servlet-name>
	  <url-pattern>/bungeni-opensearch</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>bungeni-opensearch-statistics</servlet-name>
	  <url-pattern>/bungeni-opensearch-statistics</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
	  <servlet-name>bungeni-details</servlet-name>
	  <url-pattern>/itemDetails</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
	  <servlet-name>bungeni-community</servlet-name>
	  <url-pattern>/showCollections</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
	  <servlet-name>bungeni-allitems</servlet-name>
	  <url-pattern>/allItems</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>bungeni-alternate</servlet-name>
	  <url-pattern>/alternate</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
	  <servlet-name>bungeni-listitems</servlet-name>
	  <url-pattern>/listItems</url-pattern>
	</servlet-mapping>
	

	<!--
		- Maps the petclinic dispatcher to "*.do". All handler mappings in
		- petclinic-servlet.xml will by default be applied to this subpath.
		- If a mapping isn't a /* subpath, the handler mappings are considered
		- relative to the web app root.
		-
		- NOTE: A single dispatcher can be mapped to multiple paths, like any servlet.
	-->
	<servlet-mapping>
		<servlet-name>crosswalk</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>

	<welcome-file-list>
		<!-- Redirects to "welcome.htm" for dispatcher handling -->
		<welcome-file>index.html</welcome-file>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- Icon MIME type -->
  <mime-mapping>
    <extension>ico</extension>
    <mime-type>image/x-icon</mime-type>
  </mime-mapping>
  
  <!-- JSTL Format tag, for i18n -->
  <!-- <taglib>
    <taglib-uri>http://java.sun.com/jsp/jstl/fmt</taglib-uri>
    <taglib-location>/WEB-INF/fmt.tld</taglib-location>
  </taglib> -->

	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<!-- Displays a stack trace -->
		<location>/WEB-INF/jsp/uncaughtException.jsp</location>
	</error-page>
	
	<!-- Error pages -->
  <error-page>
    <error-code>404</error-code>
    <location>/error/404.jsp</location>
  </error-page>

  <error-page>
    <error-code>500</error-code>
    <location>/internal-error</location>
  </error-page>

</web-app>
